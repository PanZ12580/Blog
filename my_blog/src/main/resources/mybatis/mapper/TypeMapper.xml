<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzhang.dao.TypeDao">
    <resultMap id="typeMap" type="type">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <association property="blogCount"
                     column="id"
                     select="com.hzhang.dao.BlogDao.findCountByTypeId"></association>
    </resultMap>

    <resultMap id="fullTypeMap" type="type" extends="typeMap">
        <collection property="blogList"
                    ofType="blog"
                    column="id"
                    select="com.hzhang.dao.BlogDao.findBlogByTypeId"></collection>
    </resultMap>

    <insert id="saveType" useGeneratedKeys="true" keyProperty="id" parameterType="type">
        insert into type(name) values(#{name})
    </insert>

    <update id="updateType" parameterType="type">
        update type set name = #{name} where id = #{id}
    </update>

    <delete id="deleteType" parameterType="Long">
        delete from type where id = #{id}
    </delete>

    <select id="findTypeById" parameterType="Long" resultType="type">
        select type.id, type.name from type where id = #{id}
    </select>

    <select id="findTypeByName" parameterType="String" resultType="type">
        select type.id, type.name from type where name = #{name}
    </select>

    <select id="findTypeList" resultMap="typeMap">
        select type.id, type.name from type
    </select>

    <select id="findBlogByTypeId" resultMap="fullTypeMap">
        select type.id, type.name from type
        <where>
            <if test="typeId != 0">and type.id = #{typeId}</if>
        </where>
    </select>
</mapper>